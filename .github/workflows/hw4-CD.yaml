# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support


name: HW-4 CD
on:
  pull_request:
    branches:
      - main
    types: [closed]


jobs:
  build-image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest



      #before those secrets.AWS_ACCESS_KEY_ID_DEMO and key is from packer user, only for creating AMI.
      # right now since A9,we need to create Launch Template and autoScaling refresh
      #      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID_DEMO}}
      #      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_DEMO}}
      #      region: ${{secrets.region}}
    #since A9, I will increase the permission of role form those key ID to Demo IAM user

    env:
      #      AWS_EC2_METADATA_DISABLED: true
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID_DEMO}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_DEMO}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION }}

      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}
      DEV_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          mvn package

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:

          version: "1.8.3"  ##or `latest`
      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:

          command: validate
          arguments: -syntax-only
          target: ./packer/packer.pkr.hcl




      - name: check environment variables
        run: echo $DEMO_ACCOUNT_ID

      - name: Get latest AMI ID
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID_DEMO_A9}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_DEMO_A9}}
        run: |
          latest_ami_id=$(aws ec2 describe-images \

             

            --owners 160774145825 187570859166 814613584038 \

            --query 'sort_by(Images, &CreationDate)[-1].ImageId' \
            --output text)
          echo "LATEST_AMI_ID=$latest_ami_id" >> $GITHUB_ENV
          aws configure set default.output json 

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID_DEMO_A9 }} --profile demo
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY_DEMO_A9 }} --profile demo
          aws configure set default.region ${{secrets.AWS_DEFAULT_REGION }} --profile demo
          aws configure set default.output json --profile demo




      - name: Create Launch Template Version
        id: create-launch-template
        run: |
          LAUNCH_TEMPLATE_ID=$(aws ec2 describe-launch-templates --query "LaunchTemplates[?starts_with(LaunchTemplateName, 'asg_launch_template')].LaunchTemplateId" --output text --profile demo)
          
          aws --profile demo ec2 create-launch-template-version \
          --launch-template-id ${LAUNCH_TEMPLATE_ID} \
          --source-version '$Latest' \
          --version-description "New version with latest AMI" \
          --launch-template-data '{"ImageId":"'"$LATEST_AMI_ID"'"}'
          echo "LAUNCH_TEMPLATE_ID=$LAUNCH_TEMPLATE_ID" >> $GITHUB_ENV

      - name: Get Auto Scaling Group name
        run: |
          ASG_NAME=$(aws autoscaling describe-auto-scaling-groups --query "AutoScalingGroups[?starts_with(AutoScalingGroupName, 'web_asg')].AutoScalingGroupName" --output text --profile demo)
          echo "ASG_NAME=$ASG_NAME" >> $GITHUB_ENV
  

      - name: Update Auto Scaling Group
        run: |
          aws --profile demo autoscaling update-auto-scaling-group \
          --auto-scaling-group-name $ASG_NAME  \
          --launch-template LaunchTemplateId=$LAUNCH_TEMPLATE_ID,Version='$Latest'
    
    

      - name: Refresh Auto Scaling Group Instances
        run: |
          aws --profile demo autoscaling start-instance-refresh \
          --auto-scaling-group-name $ASG_NAME






      - name: Run packer build

        run: cd packer && packer build packer.pkr.hcl
